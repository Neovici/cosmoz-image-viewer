---
name: Github CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  lint-test-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Restore npm cache
        id: node-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-0-${{ hashFiles('**/package-lock.json') }}

      - name: Install
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Lint commit messages
        run: npx commitlint --from origin/master --to HEAD

      - name: ESLint
        run: npm run lint

      - name: Test and report
        env:
          CC_TEST_REPORTER_ID: 48833ad27a301e5714aa1de8de7f8b8f0a662c12aceefab9cbc37d0a7e888a0e
          GIT_BRANCH: ${{ github.ref == 'refs/heads/master' && 'master' || github.ref }}
          GIT_COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
          NEO_CC_URL: https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
          NEO_CC: ./cc-test-reporter
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        run: |
          ([[ -e $NEO_CC ]] || curl -L $NEO_CC_URL > $NEO_CC) && chmod +x $NEO_CC
          $NEO_CC before-build
          echo "::add-matcher::.github/karma-problem-matcher.json"   
          npm test
          $NEO_CC after-build --exit-code $?

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Semantic release
        run: npx semantic-release
        if: success()
        env:
          HUSKY: 0
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
